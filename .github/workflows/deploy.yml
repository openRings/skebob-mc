name: Build and Deploy Docker Containers

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build-amd64:
    runs-on: ubuntu-22.04
    permissions:
        contents: read
        packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        run: |
          docker buildx create --use

      - name: Build and push `proxy` Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file ./docker/Dockerfile.prod.proxy \
            --cache-from type=registry,ref=ghcr.io/openrings/skebob-cache:proxy \
            --cache-to type=registry,ref=ghcr.io/openrings/skebob-cache:proxy,mode=max \
            --tag ghcr.io/openrings/skebob-proxy:latest \
            --tag ghcr.io/openrings/skebob-proxy:${GITHUB_SHA} \
            --push \
            .

      - name: Build and push `backend` Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --file ./docker/Dockerfile.prod.backend \
            --cache-from type=registry,ref=ghcr.io/openrings/skebob-cache:backend-amd64 \
            --cache-to type=registry,ref=ghcr.io/openrings/skebob-cache:backend-amd64,mode=max \
            --tag ghcr.io/openrings/skebob-backend:amd64 \
            --push \
            .

      - name: Build and push `prometheus` Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file ./docker/Dockerfile.prod.prometheus \
            --tag ghcr.io/openrings/skebob-prometheus:latest \
            --tag ghcr.io/openrings/skebob-prometheus:${GITHUB_SHA} \
            --push \
            .

      - name: Build and push `minecraft` Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file ./docker/Dockerfile.minecraft \
            --tag ghcr.io/openrings/skebob-minecraft:latest \
            --tag ghcr.io/openrings/skebob-minecraft:${GITHUB_SHA} \
            --push \
            .

  build-arm:
    runs-on: ubuntu-22.04-arm
    permissions:
        contents: read
        packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        run: |
          docker buildx create --use

      - name: Build and push `backend` Docker image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --file ./docker/Dockerfile.prod.backend \
            --cache-from type=registry,ref=ghcr.io/openrings/skebob-cache:backend-arm \
            --cache-to type=registry,ref=ghcr.io/openrings/skebob-cache:backend-arm,mode=max \
            --tag ghcr.io/openrings/skebob-backend:arm64 \
            --push \
            .


  manifest-prepare:
    needs:
      - build-amd64
      - build-arm
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest for `backend`
        run: |
          docker buildx imagetools create \
            -t ghcr.io/openrings/skebob-backend:latest \
            -t ghcr.io/openrings/skebob-backend:${GITHUB_SHA} \
            ghcr.io/openrings/skebob-backend:amd64 \
            ghcr.io/openrings/skebob-backend:arm64


  deploy:
    needs: manifest-prepare
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.HOST_KEY }}

      - name: Copy compose file to server
        run: |
          scp -o StrictHostKeyChecking=no compose.prod.yml ${{ secrets.HOST_USER }}@${{ secrets.HOST_ADDR }}:skebobmc/docker-compose.yml

      - name: Pull and Start Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.HOST_USER }}@${{ secrets.HOST_ADDR }} 'cd skebobmc && docker compose pull && docker compose up -d backend database prometheus proxy'
